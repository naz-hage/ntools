name: dotnet-desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]
  workflow_call:

env:
  Solution_Name: ntools.sln
  Test_Project_Path: LauncherTests
  Enable_Logging: true # Enable additional logging

jobs:
  build:
    name: Build and Test
    runs-on: windows-latest

    env:
      Solution_Name: ${{ env.Solution_Name }}
      Test_Project_Path: ${{ env.Test_Project_Path }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    - name: Install ntools
      run: |
        cd ./DevSetup
        ./install-ntools.ps1
      shell: pwsh
      working-directory: ${{ github.workspace }}

    - name: Set ProgramFilesPath
      run: |
        $programFilesPath = [System.Environment]::GetFolderPath('ProgramFiles')
        echo "ProgramFilesPath=$programFilesPath" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh
      working-directory: ${{ github.workspace }}
   
    - name: Configure Git
      run: |
        git config --global user.name "gitHub-actions"
        git config --global user.email "actions@github.com"

    - name: Run a staging build using ntools
      run: |
        & "$env:ProgramFilesPath/nbuild/nb.exe" staging -v ${{ env.Enable_Logging }}
      shell: pwsh
      working-directory: ${{ github.workspace }}

  docs:
    name: Publish docs
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies	
        run: |	
          python -m pip install --upgrade pip	
          pip install mkdocs	
      - name: Update docs	
        run: |	
          mkdocs build	
          mkdocs gh-deploy --force

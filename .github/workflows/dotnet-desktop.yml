
name: dotnet-desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]
  workflow_call:


jobs:

  build:
    name: Build and Test # More descriptive name for the build job
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: ntools.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: LauncherTests                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      DevDrive: 'D:'
      MainDir: 'source'
      WorkingDir: 'D:\source\REPO_NAME'

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Copy repository
      run: |
        New-Item -ItemType Directory -Force -Path ${{ env.DevDrive }}\${{ env.MainDir }}
        Remove-Item -Path ${{ env.WorkingDir }} -Recurse -Force -ErrorAction Ignore
        Copy-Item -Path ${{ github.workspace }}\* -Destination ${{ env.WorkingDir }} -Recurse -Force
      shell: pwsh

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Install ntools
    - name: Install ntools
      run: |
        cd ./DevSetup
        ./install-ntools.ps1
      shell: pwsh
      working-directory: ${{ env.WorkingDir }}

    # Set ProgramFilesPath
    - name: Set ProgramFilesPath
      run: |
        
        $programFilesPath = [System.Environment]::GetFolderPath('ProgramFiles')
        echo "ProgramFilesPath=$programFilesPath" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh
      working-directory: ${{ env.WorkingDir }}
   
    # Configure Git
    - name: Configure Git
      run: |
        git config --global user.name "gitHub-actions"
        git config --global user.email "actions@github.com"

    # Build Staging using ntools
    - name: Run nb.exe
      run: |
        & "$env:ProgramFilesPath/nbuild/nb.exe" staging
      shell: pwsh
      working-directory: ${{ env.WorkingDir }}

  docs:
    name: Publish docs  # More descriptive name for the docs job
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
    
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies	
        run: |	
          python -m pip install --upgrade pip	
          pip install mkdocs	
      - name: Update docs	
        run: |	
          mkdocs build	
          mkdocs gh-deploy --force


name: dotnet-desktop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "*" ]
  workflow_call:


jobs:

  build:
    name: Build and Test # More descriptive name for the build job
    runs-on: windows-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: ntools.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      Test_Project_Path: LauncherTests                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        path: /d:/source

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v4
                
   
      with:
        dotnet-version: 8.0

    #  Upload a test output file
    # - name: Upload test output
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: Test Output
    #     path: test_output.txt
    
    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v2

    # Install ntools
    - name: Install ntools
      run: |
        cd ./DevSetup
        ./install-ntools.ps1
      shell: pwsh
      working-directory: ${{ github.workspace }}

    # Set ProgramFilesPath
    - name: Set ProgramFilesPath
      run: |
        $programFilesPath = [System.Environment]::GetFolderPath('ProgramFiles')
        echo "ProgramFilesPath=$programFilesPath" | Out-File -FilePath $env:GITHUB_ENV -Append
      shell: pwsh
   
    # Configure Git
    - name: Configure Git
      run: |
        git config --global user.name "gitHub-actions"
        git config --global user.email "actions@github.com"

    # Build Staging using ntools
    - name: Run nb.exe
      run: |
        & dotnet build --configuration Debug --verbosity normal
        & "Debug/nb.exe" solution -v true
      shell: pwsh
      working-directory: ${{ github.workspace }}

    - name: Install dependencies
      run: dotnet restore

    # Execute all unit tests in the solution
    - name: Build the solution
      run: dotnet build --no-restore --verbosity normal

    - name: Execute unit tests
      #run: dotnet test --no-build --verbosity normal /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      run: dotnet test --no-build --verbosity normal
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: 1



  docs:
    name: Publish docs  # More descriptive name for the docs job
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: /d:/source
    
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies	
        run: |	
          python -m pip install --upgrade pip	
          pip install mkdocs	
      - name: Update docs	
        run: |	
          mkdocs build	
          mkdocs gh-deploy --force

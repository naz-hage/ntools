<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!--This targets file can be used only if it imported by common.targets-->
	
	<!-- Download node version specified in NodeTargetVersion - Requires admin mode -->
	<Target Name="NODE_DOWNLOAD" DependsOnTargets="IS_ADMIN;APP_COMMON" >
		<PropertyGroup>

			<!-- visit https://nodejs.org/dist/ to get the latest stable version -->

			<WebUri>https://nodejs.org/dist/v$(NodeTargetVersion)/node-v$(NodeTargetVersion)-x64.msi</WebUri>
			<FileName>$(DownloadsDirectory)\node-v$(NodeTargetVersion)-x64.msi</FileName>
		</PropertyGroup>
		<RedError Condition="'$(IsAdmin)' == false" Message="Must be an admin to install $(NodeAppName)" />
		

		<Delete Files="$(FileName)" Condition="Exists('$(FileName)') == true" />
        
		<WebDownload WebUri="$(WebUri)" FileName="$(FileName)" />
		
		<Message Text="==> NODE_DONE"/>
	</Target>
	
	
	<!-- Download node version specified in NodeTargetVersion property and install-->
    <Target Name="NODE_INSTALL" DependsOnTargets="IS_ADMIN;NODE_DOWNLOAD" >
        <PropertyGroup>
            <NodeExe>$(ProgramFiles)\nodejs\node.exe</NodeExe>
        </PropertyGroup>
        <Exec Command='"$(NodeExe)" --version' Condition="Exists('$(NodeExe)')" />
        
        <RedError Condition="'$(IsAdmin)' == false" Message="Must be an admin to install node" />
        

        <FileVersion Name="$(NodeExe)" Condition="Exists('$(NodeExe)')" >
            <Output TaskParameter="Output" PropertyName="NodeVersion" />
        </FileVersion>

		<Message Text="$(NodeAppName) is not installed" Condition="'$(NodeVersion)' == ''" />
        <!-- Display the file version -->
		<Message Text="$(NodeAppName) Version is $(NodeVersion)" Condition="'$(NodeVersion)' != ''" />
       
        <Message Text="Installing Node.js" Condition="!Exists('$(NodeExe)') or '$(NodeVersion)' == '' or '$(NodeVersion)' &lt; '$(NodeTargetVersion)'"/>
		<Exec Command='msiexec.exe /i "$(FileName)" /quiet /norestart' Condition="'$(NodeVersion)' == '' Or '$(NodeVersion)' &lt; '$(NodeTargetVersion)'" />

		<Delete Files="$(FileName)" Condition="Exists('$(FileName)') == true" />

		<Exec Command='"$(NodeExe)" --version'  Condition="Exists('$(NodeExe)')" />
		
		<FileVersion Name="$(NodeExe)" Condition="Exists('$(NodeExe)')" >
			<Output TaskParameter="Output" PropertyName="NodeVersion" />
		</FileVersion>

		<Message Text="Node.js installed version: $(NodeVersion)" />
        <Message Text="==> NODE_DONE"/>
    </Target>

	<!-- Display the installed note version -->
    <Target Name="NODE_VERSION" >
        <PropertyGroup>
            <NodeExe>$(ProgramFiles)\nodejs\node.exe</NodeExe>
        </PropertyGroup>
        <Exec Command='"$(NodeExe)" --version'  Condition="Exists('$(NodeExe)')" />
        <Message Text="Node.js installed version: $(NodeVersion)" />
        <Message Text="==> NODE_DONE"/> 
    </Target>

</Project>

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<!--This targets file can be used only if it imported by common.targets-->

    <!-- Download node version specified in CodeTargetVersion - Requires admin mode -->
    <Target Name="CODE_DOWNLOAD" DependsOnTargets="IS_ADMIN;APP_COMMON" >
        <PropertyGroup>

            <!-- visit https://code.visualstudio.com/Download to get the latest stable version -->

            <WebUri>https://code.visualstudio.com/sha/download?build=stable&amp;os=win32-x64-user</WebUri>
            <FileName>$(DownloadsDirectory)\VSCodeSetup.exe</FileName>
        </PropertyGroup>
        <RedError Condition="'$(IsAdmin)' == false" Message="Must be an admin to install $(CodeAppName)" />
        
        <Delete Files="$(FileName)" Condition="Exists('$(FileName)') == true" />
        
        <WebDownload WebUri="$(WebUri)" FileName="$(FileName)" />
        
        <Message Text="==> CODE_DONE"/>
    </Target>

    <!-- Download node version specified in CodeTargetVersion property and install-->
    <Target Name="CODE_INSTALL" DependsOnTargets="IS_ADMIN;CODE_DOWNLOAD" >
        <PropertyGroup>
            <CodeExe>$(ProgramFiles)\Microsoft VS Code\Code.exe</CodeExe>
        </PropertyGroup>
        <Exec Command='"$(CodeExe)" --version' Condition="Exists('$(CodeExe)')" />
        
        <RedError Condition="'$(IsAdmin)' == false" Message="Must be an admin to install $(CodeAppName)" />
        
        <FileVersion Name="$(CodeExe)" Condition="Exists('$(CodeExe)')" >
            <Output TaskParameter="Output" PropertyName="CodeVersion" />
        </FileVersion>

        <Message Text="$(CodeAppName) is not installed" Condition="'$(CodeVersion)' == ''" />
        <!-- Display the file version -->
        <Message Text="$(CodeAppName) Version is $(CodeVersion)" Condition="'$(CodeVersion)' != ''" />

        <Message Text="Installing $(CodeAppName)" Condition="!Exists('$(CodeExe)') or '$(CodeVersion)' == '' or '$(CodeVersion)' &lt; '$(CodeTargetVersion)'"/>
        <Exec Command='"$(FileName)" /silent /mergetasks=!runcode,addcontextmenufiles,addcontextmenufolders' Condition="'$(CodeVersion)' == '' Or '$(CodeVersion)' &lt; '$(CodeTargetVersion)'" />

        <Delete Files="$(FileName)" Condition="Exists('$(FileName)') == true" />

        <Exec Command='"$(CodeExe)" --version'  Condition="Exists('$(CodeExe)')" />

        <FileVersion Name="$(CodeExe)" Condition="Exists('$(CodeExe)')" >
            <Output TaskParameter="Output" PropertyName="CodeVersion" />
        </FileVersion>

        <Message Text="$(CodeAppName) installed version: $(CodeVersion)" />
        <Message Text="==> CODE_DONE"/>
    </Target>
    
</Project>
